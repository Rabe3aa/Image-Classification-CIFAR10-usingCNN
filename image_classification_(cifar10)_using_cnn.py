# -*- coding: utf-8 -*-
"""Image classification (CIFAR10) using CNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Q2F9na2MSGgCRZFm3fQga6WUi276iBp5
"""

import numpy as np
import matplotlib.pyplot as plt
from tensorflow import keras

(X_train, y_train),(X_test, y_test) = keras.datasets.cifar10.load_data()

plt.imshow(X_train[0])

y_train = y_train.reshape(-1,)

classes = ['airplane', 'automobile','bird','cat','deer','dog','frog','horse','ship','truck']

classes[y_train[0]]

X_train = X_train / 255
X_test = X_test / 255

X_train.shape, y_train.shape

model = keras.Sequential([
                  keras.layers.Conv2D(filters=32, kernel_size=(3,3), input_shape = (32,32,3), activation='relu'),
                  keras.layers.MaxPool2D((2,2)),
                  keras.layers.Conv2D(filters=64, kernel_size=(3,3), input_shape = (32,32,3), activation='relu'),
                  keras.layers.MaxPool2D((2,2)),

                  keras.layers.Flatten(),
                  keras.layers.Dense(64, activation='relu'),
                  keras.layers.Dense(10, activation='softmax'),
])

model.compile(
    optimizer='adam',
    loss = 'sparse_categorical_crossentropy',
    metrics = ['accuracy']
)

model.fit(X_train, y_train, epochs = 10)

model.evaluate(X_test, y_test)

preds = model.predict(X_test)

preds = [np.argmax(i) for i in preds]

from sklearn.metrics import classification_report

print(classification_report(y_test, preds))

